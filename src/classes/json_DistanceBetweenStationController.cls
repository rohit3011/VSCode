//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.



public class json_DistanceBetweenStationController {
    
    public String source{get;set;}
    public String destination {get;set;}
    public Date travelDate {get;set;}
    public dateTime travelDate1 {get;set;}
    public list<String> list_TrainName{get;set;}
    public map<string, string> destinationArrTime{get;set;}
    public map<string, string> distance{get;set;}
    public map<string, string> schDepTime{get;set;}
    public map<string, string> travelTime{get;set;}
    public map<string, string> trainNumber {get;set;}
    public map<string, list<string>> trainRunOnDays {get;set;}
    public map<string, list<string>> listOfAvailableClasses {get;set;}
    public map<string, string> trainDesStatCode {get;set;}
    public map<string, string> trainSourceStatCode {get;set;}
    public map<string, string> trainSourceStatName {get;set;}
    public map<string, string> trainDesStatName {get;set;}
    public integer count {get;set;} 
    public map<string, integer> trainClassesCount {get;set;}
    public string classOne {get;set;}   // getting the trainNumber
    public string classOne1 {get;set;}
    public string classOne2 {get;set;}
    public string classOne3 {get;set;}
    
    public string classTwo {get;set;}
    public string classThree {get;set;}
    public string classFour {get;set;}
    
    public boolean responseError{get;set;}
    
    public List<Train> train {get;set;} 
    public String error {get;set;} 
    public Integer total {get;set;} 
    public Integer response_code {get;set;} 
    
    public class Days {
        public String dayCode {get;set;} 
        public String runs {get;set;}       
    }
    
    public class To {
        public String name {get;set;} 
        public String code {get;set;}       
    }
    
    public class from_z {
        public String name {get;set;} 
        public String code {get;set;}       
    }   
    
    public class Train {
        public String name {get;set;} 
        public String dest_arrival_time {get;set;} 
        public To to {get;set;} 
        public Integer no {get;set;} 
        public List<Days> days {get;set;} 
        public To from_z {get;set;} // in json: from
        public String src_departure_time {get;set;} 
        public List<Classes> classes {get;set;} 
        public String travel_time {get;set;} 
        public String trNumber {get;set;} // in json: number
    }
    
    public class Classes {
        public String classCode {get;set;}      // json response is coming as variable class-code, so we need to modify the json response
        public String available {get;set;} 
    }
    
    
    public class Availability {
        public String date1 {get;set;} 
        public String status {get;set;} 
    }
    public class Quota {
        public String quota_name {get;set;} 
        public String quota_code {get;set;}         
    }
    
    public List<Availability> availability {get;set;} 
    public Quota quota {get;set;} 
    public String train_name {get;set;} 
    
    public list<string> availStatusDate {get;set;}
    public list<string> availStatus {get;set;}
    public map<string, string> dateAvailStatus {get;set;}
    public string qCode {get;set;}
    public string qName {get;set;}
    
    public string tDate;
    
    public boolean displayPopup {get; set;}     
    
    public void closePopup() {        
        displayPopup = false;    
    }     
    public void showPopup() {        
        displayPopup = true;    
    }   
    
    // Variable and class declaration for train route finder: showTrainRoute Method
    public string selectedTrainNumber {get;set;}
    public Train train1 {get;set;} 
    public List<Route> route {get;set;} 
    //  public Integer response_code {get;set;} 
    
    
    /*  public class Days {
public String runs {get;set;} 
public String day-code {get;set;}       
} */
    
    public class Train1 {
        public List<Classes> classes {get;set;} 
        public List<Days> days {get;set;} 
        public String number_Z {get;set;} // in json: number
        public String name {get;set;} 
        
    } 
    
    public class Route {
        public Integer distance {get;set;} 
        public String fullname {get;set;} 
        public Integer halt {get;set;} 
        public String scharr {get;set;} 
        public String state {get;set;} 
        public Integer no {get;set;} 
        public Integer day {get;set;} 
        public Double lat {get;set;} 
        public Integer route {get;set;} 
        public String schdep {get;set;} 
        public Double lng {get;set;} 
        public String code {get;set;} 
    }
    public list<json_DistanceBetweenStationController.route> listTrainRoute {get;set;}
    
    /*  public class Classes {
public String class-code {get;set;} 
public String available {get;set;} 

}*/
    
    public static json_DistanceBetweenStationController parse(String json) {
        return (json_DistanceBetweenStationController) System.JSON.deserialize(json, json_DistanceBetweenStationController.class);
    }
    
    
    public pageReference submit(){
        system.debug('********inside Submit*****');
        try{
            responseError = false;
            tDate = traveldate.day() + '-' + traveldate.month() + '-' + traveldate.year();
            
            string url = 'http://api.railwayapi.com/between/source/'+source+'/dest/'+destination+'/date/'+tDate+'/apikey/p46q7tyd/';
            url = url.replaceAll(' ','%20');
            Http http = new Http();
            HttpRequest req = new HttpRequest();
            req.setEndpoint(url);        
            req.setMethod('GET');
            
            HttpResponse response = http.send(req);
            
            if (response.getStatusCode() == 200) {   
                
                // commenting line to modify the JSON response, bcz for that we need to get the response body in string and then modify the string
                // json_DistanceBetweenStationController json = json_DistanceBetweenStationController.parse(response.getBody());    
                
                // used following 2-3 lines of code because we are modifying the JSON response for classCode variable
                string jsonbody = response.getbody();   // getting the response into string
                
                jsonbody = jsonbody.replace('class-code','classCode');  // replcaing the JSON response variable containing hyphen
                jsonbody = jsonbody.replace('number','trNumber');   // replcaing the JSON response variable containing hyphen
                jsonbody = jsonbody.replace('from','from_z');   // replcaing the JSON response variable containing hyphen
                json_DistanceBetweenStationController json = json_DistanceBetweenStationController.parse(jsonbody);    
                
                list<json_DistanceBetweenStationController.train> listTrains = new list<json_DistanceBetweenStationController.train>();
                list<json_DistanceBetweenStationController.days> listDays = new list<json_DistanceBetweenStationController.days>();
                list<json_DistanceBetweenStationController.classes> listClasses = new list<json_DistanceBetweenStationController.classes>();
                json_DistanceBetweenStationController.To listDestStation = new json_DistanceBetweenStationController.To();
                
                list<string> testString = new list<string>();
                listTrains = json.train;  
                list_TrainName = new list<string>();
                destinationArrTime = new map<string, string>(); 
                distance = new map<string, string>(); 
                schDepTime = new map<string, string>(); 
                travelTime = new map<string, string>();
                trainNumber = new map<string, string>();
                trainRunOnDays = new map<string, list<string>>();
                listOfAvailableClasses = new map<string, list<string>>();
                trainClassesCount = new map<string, integer>();
                trainDesStatCode = new map<string, string>();
                trainSourceStatCode = new map<string, string>();
                trainDesStatName = new map<string, string>();
                trainSourceStatName = new map<string, string>();
                
                for(json_DistanceBetweenStationController.train json1 : listTrains){
                    testString = new list<String>();
                    list_TrainName.add(json1.Name);
                    destinationArrTime.put(json1.Name, json1.dest_arrival_time);
                    //distance.put(json1.Name, json1.dest_arrival_time);
                    schDepTime.put(json1.Name, json1.src_departure_time);
                    travelTime.put(json1.Name, json1.travel_time);
                    trainNumber.put(json1.Name, json1.trNumber);
                    trainDesStatCode.put(json1.Name, json1.to.Code);
                    trainSourceStatCode.put(json1.Name, json1.from_z.code);
                    trainDesStatName.put(json1.Name, json1.to.Name);
                    trainSourceStatName.put(json1.Name, json1.from_z.Name);
                    
                    // trainRunOnDays.put(json1.Name, new list<string>());
                    listDays = json1.days;
                    for(Days d : listDays){
                        testString.add(d.runs);
                        trainRunOnDays.put(json1.Name, testString);
                        
                    }  
                    
                }       
                
                for(json_DistanceBetweenStationController.train json1 : listTrains){
                    listOfAvailableClasses.put(json1.Name, new list<string>());
                    listClasses = json1.classes;
                    for(classes c : listClasses){
                        if(c.available == 'Y'){
                            listOfAvailableClasses.get(json1.Name).add(c.classCode);
                        }
                    }
                    trainClassesCount.put(json1.Name, listOfAvailableClasses.get(json1.Name).size());
                }           
            }
            return null;
        }    
        catch(Exception e){
            return null;
        }    
        
    }
    
    public pageReference showAvailability(){
        system.debug('********inside showAvailability*****');
        try{
            responseError = false;
            string trDate;
            trDate = traveldate.day() + '-' + traveldate.month() + '-' + traveldate.year();
            system.debug('****trDate**'+trDate);
            
            string urlnew = 'http://api.railwayapi.com/check_seat/train/'+classOne+'/source/'+source+'/dest/'+classOne2+'/date/'+trDate+'/class/'+classOne1+'/quota/GN/apikey/p46q7tyd/';
            //string urlnew = 'http://api.railwayapi.com/check_seat/train/12216/source/AII/dest/DEC/date/31-10-2016/class/3A/quota/GN/apikey/rxbzp3727/';
            system.debug('****url**'+urlnew);
            Http http = new Http();
            HttpRequest req = new HttpRequest();
            req.setEndpoint(urlnew);        
            req.setMethod('GET');
            req.setTimeout(6000);
            
            HttpResponse response = http.send(req);
            
            if (response.getStatusCode() == 200) {  
                string jsonbody = response.getbody();
                jsonbody = jsonbody.replace('date','date1'); 
                json_DistanceBetweenStationController json = json_DistanceBetweenStationController.parse(jsonbody);    
                
                list<json_DistanceBetweenStationController.Availability> listAvail = new list<json_DistanceBetweenStationController.Availability>();
                json_DistanceBetweenStationController.Quota q = new json_DistanceBetweenStationController.Quota();
                q = json.Quota;
                listAvail = json.Availability;
                system.debug('****listAvail**'+listAvail); 
                qCode = q.quota_code;
                qName = q.quota_name;
                
                availStatus = new list<string>();
                availStatusDate = new list<string>();
                dateAvailStatus = new map<string,string>();
                
                for(json_DistanceBetweenStationController.Availability json1 : listAvail){
                    availStatus.add(json1.Status);
                    availStatusDate.add(json1.Date1);
                    dateAvailStatus.put(json1.date1, json1.Status);
                }
                system.debug('****availStatus**'+availStatus);   
                system.debug('****dateAvailStatus**'+dateAvailStatus);
            } 
            else{
                if(response.getStatusCode() != 200) { 
                    responseError = true;
                    system.debug('****responseError**'+responseError); 
                }
            }
            return null;
        }
        catch(Exception e){
            responseError = true;
            system.debug('****responseError**'+responseError); 
            Apexpages.addMessage(new ApexPages.Message(ApexPages.SEVERITY.ERROR, 'ERROR'));
            return null;
        }   
    }
    
    public list<string> stationCode{get;set;}
    public map<string, integer> route_distance {get;set;}    
    public map<string, string> route_fullName {get;set;}    
    public map<string, integer> route_halt {get;set;}    
    public map<string, string> route_scharr {get;set;}    
    public map<string, integer> route_no {get;set;}    
    public map<string, integer> route_day {get;set;}    
    public map<string, string> route_schdep {get;set;}    
    // public map<string, string> route {get;set;}  
    public string selectedTrainName{get;set;}
    public string selectedFromStation{get;set;}
    public string selectedDestStation{get;set;}
    
    
    public pageReference showTrainRoute(){
        try{        
            responseError = false;
            system.debug('***TrainNumber**'+selectedTrainNumber);
            string url = 'http://api.railwayapi.com/route/train/'+selectedTrainNumber+'/apikey/p46q7tyd/';
            //http://api.railwayapi.com/route/train/12216/apikey/rxbzp3727/
            // string url = 'http://api.railwayapi.com/route/train/12216/apikey/rxbzp3727/';
            url = url.replaceAll(' ','%20');
            system.debug('***url**'+url);
            Http http = new Http();
            HttpRequest req = new HttpRequest();
            req.setEndpoint(url);        
            req.setMethod('GET');
            
            HttpResponse response = http.send(req);
            
            if (response.getStatusCode() == 200) {  
                string jsonbody = response.getbody();   // getting the response into string
                system.debug('***url**'+url);
                jsonbody = jsonbody.replace('train','train1');
                jsonbody = jsonbody.replace('number','trNumber'); 
                jsonbody = jsonbody.replace('class-code','classCode');
                system.debug('***jsonbody**'+jsonbody);
                //list<json_DistanceBetweenStationController.train> listTrains = new list<json_DistanceBetweenStationController.train>();
                json_DistanceBetweenStationController json = json_DistanceBetweenStationController.parse(jsonbody);
                system.debug('***json**'+json);
                listTrainRoute = new list<json_DistanceBetweenStationController.route>();
                listTrainRoute = json.route;
                system.debug('***listTrainRoute**'+listTrainRoute);
                stationCode = new list<string>();
                route_distance = new map<string, integer>();
                route_fullName = new map<string, string>();
                route_halt = new map<string, integer>();
                route_scharr = new map<string, string>();
                route_no = new map<string, integer>();
                route_day = new map<string, integer>();
                route_schdep = new map<string, string>();                
                
                
                for(json_DistanceBetweenStationController.route trRoute : listTrainRoute){
                    stationCode.add(trRoute.code);
                    route_distance.put(trRoute.code, trRoute.distance);
                    route_fullName.put(trRoute.code, trRoute.fullName);
                    route_halt.put(trRoute.code, trRoute.halt);
                    route_scharr.put(trRoute.code, trRoute.scharr);
                    route_no.put(trRoute.code, trRoute.no);
                    route_day.put(trRoute.code, trRoute.day);
                    route_schdep.put(trRoute.code, trRoute.schdep);
                }
                system.debug('***stationCode**'+stationCode);
            }
        }    
        catch(Exception e){
        }
        return null;
    }
    
}